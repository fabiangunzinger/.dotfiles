#################################################
# Alises
#################################################

# Basics

alias ..='cd ..'

alias ls='eza' # replace ls by exa and allow all other exa arguments
alias l='ls -lbF' #   list, size, type
alias ll='ls -la' # long, all
alias llm='ll --sort=modified' # list, long, sort by modification date
alias la='ls -lbhHigUmuSa' # all list
alias lx='ls -lbhHigUmuSa@' # all list and extended
alias lS='ls -1' # one column by just names
alias lg='ls -la | grep $1'
alias lt="eza --tree -a -I '.git|__pycache__|.mypy_cache|.ipynb_checkpoints|.DS_Store'"

alias pwdc='pwd | pbcopy'
alias rmf='rm -rf'
alias so='source ~/.zshrc'

# Quick directory access
alias dic='cd ~/Library/Mobile\ Documents/com~apple~CloudDocs'

# Github backup
alias gbu='~/bin/github-backup'


# Blog
alias qp='quarto preview'
alias qrh='quarto render && hugo'
function hnp() { hugo new posts/$1; }

# Neovim
alias vi="nvim"
alias vif="nvim +'Telescope find_files'"
alias vig="nvim +'Telescope live_grep'"

# Tmux
alias tml='tmux ls'
function tmn() { tmux new-session -s $1; }
function tma() { tmux attach-session -t $1; }
function tmk() { tmux kill-session -t $1; }

# Github
alias ghp='git help'                # ..git verb for which help is needed
alias gs='git status'               # verbose status
alias gss='git status --short'      # cols are staging area and working-tree
alias gl='git log --oneline -3'     # oneline log
alias glv='git log -3'              # verbose log
alias gd='git diff'                 # .. ref a and b, defaults to wd and idx
alias gds='git diff --staged'       # diff between index and last commit
alias gsw='git show'                # show some object
alias gt='git tag'                  # ..tagname for last commit, dft lists tags

alias ga='git add'                  # .. file to stage (move to index)
alias gaa='git add --all'           # add all modified files to index
alias gap='git add --patch'         # stage individual hunks
alias gc='git commit --verbose'     # show diff in editor
alias gcm='git commit --message'    # commit with inline message
alias gacm='gaa; gcm'               # add and commit all edited files
alias gca='gc --amend'              # add changes to last commit or edit msg
alias gcan='gcadd --no-edit'        # add changes to last commit (keep msg)

alias grm='git rm'                  # ..fn to remove, then stage for commit
alias grmc='git rm --cached'        # ..fn to remove from index but not wd
alias gre='git restore'             # ..fn to revert back to state of last commit
alias gres='git restore --staged'   # ..fn to remove from index

alias gst='git stash'               # save current state of working tree
alias gstp='gst pop'                 # apply and delete (last)
alias gsta='gst apply'              # ..stash ref (sr) to apply, default sr is last
alias gstd='gst drop'               # ..sr to drop, default sr is last
alias gstb='gst branch'              # ..sr to create branch from, default sr is last
alias gstl='gst list'               # list stored stashes

# alias gcn='git clean'               # ..fn to be removed from wd
# alias gcnn='gc --dry-run'           # dry run of above

alias gph='git push'                # move remote pointer to match local one
alias gphsu='gph --set-upstream origin $(git_current_branch'
# alias gphd='gph origin --delete'   # ..refs to delete (e.g. branchname)
alias gf='git fetch'                # download new files from remote (no merge)
alias gpl='git pull'                # download and merge new files from remote
function glph() { gaa; gcm "$1"; gph; } # lazy push: add, ommit, and push all files

alias gb='git --no-pager branch -vv' # list branches
alias gbm='gb --merged'             # list bs already merged into current b
alias gbnm='gb --no-merged'         # list bs not yet merged into current b
alias gbmo='git branch --move'      # rename by appending <oldname> <newname>
alias gsw='git switch'               # switch to branch (or get from remote)
alias gsc='git switch --create'     # create new branch and switch to it
alias gsp='git switch -'            # switch to previously checked out branch
alias gsm='git switch $(git_main_branch)' # switch to main branch
alias gsd='git switch $(git_develop_branch)' # switch to dev branch
alias gsd='git switch development' # switch to development branch
alias gm='git merge'                # merge branch
alias gbd='git branch -d'           # delete branch
alias gbD='git branch -D'          # force delete branch with uncommited edits


#################################################
# Config
#################################################

# Set environment variables
export MYDIRS=(~/.dotfiles/ ~/dev/work ~/dev/personal)
# Use vim for remote sessions because it's always available
if [[ -n $ssh_connection ]]; then
 export EDITOR='vim'
else
 export EDITOR='nvim'
fi
export VISUAL="$EDITOR"
export PYTHONSTARTUP="$HOME/scripts/pythonstartup.py"
export MYVIMKEYMAPS='$HOME/.dotfiles/nvim/.config/nvim/lua/config/keymaps.lua'
export MYVIMOPTIONS='$HOME/.dotfiles/nvim/.config/nvim/lua/config/options.lua'

# Tmux setup
_not_inside_tmux() { [[ -z "$TMUX" ]] }
ensure_tmux_is_running() {
  if _not_inside_tmux; then
    tat
  fi
}
# ensure_tmux_is_running
bindkey -s ^f "tmux-sessionizer\n"

# Activate starship prompt
eval "$(starship init zsh)"

# Activate z
. /opt/homebrew/etc/profile.d/z.sh


# Add personal scripts to path
export PATH="$HOME/bin:$PATH"

# GNU instead of BSD coreutils
export PATH="/opt/homebrew/opt/coreutils/libexec/gnubin:$PATH"
export PATH="/opt/homebrew/opt/grep/libexec/gnubin:$PATH"

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_BASE="$HOME/.fzf"
export FZF_DEFAULT_COMMAND='rg --hidden --no-ignore --files -g "!.git/"'
export FZF_DEFAULT_OPTS="--height 40% --layout=reverse --border"


# Search
alias fp="fd --hidden | fzf --multi --preview 'bat --style=numbers --color=always {}'"
alias vii='fp | xargs -o nvim'

# Enable zsh autocompletion
autoload -Uz compinit && compinit

#Pyenv setup
# export PYENV_ROOT="$HOME/.pyenv"
# [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
# eval "$(pyenv init -)"

# Github config

export GH_CONFIG_DIR=~/.config/gh/work
export GIT_SSH_COMMAND="ssh -i ~/.ssh/github_work"
export GH_CONFIG_DIR=~/.config/gh/personal
export GIT_SSH_COMMAND="ssh -i ~/.ssh/github_personal"

# AWS CLI completion
autoload bashcompinit && bashcompinit
autoload -Uz compinit && compinit


# Pipx
# Created by `pipx` on 2024-10-29 13:02:59
export PATH="$PATH:/Users/fgunzinger/.local/bin"
